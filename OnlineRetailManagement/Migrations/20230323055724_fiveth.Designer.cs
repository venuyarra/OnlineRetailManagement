// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineRetailManagement.Models;

#nullable disable

namespace OnlineRetailManagement.Migrations
{
    [DbContext(typeof(OnlineRetaildbContext))]
    [Migration("20230323055724_fiveth")]
    partial class fiveth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineRetailManagement.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CartId");

                    b.HasIndex("Email");

                    b.ToTable("carts");
                });

            modelBuilder.Entity("OnlineRetailManagement.Models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("totalprice")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("CartId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("OnlineRetailManagement.Models.Product", b =>
                {
                    b.Property<int>("productid")
                        .HasColumnType("int");

                    b.Property<string>("productdescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("productprice")
                        .HasColumnType("float");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("productid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("OnlineRetailManagement.Models.ProductsInCart", b =>
                {
                    b.Property<int>("ProductInCartId")
                        .HasColumnType("int");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("ProductInCartId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("productsincart");
                });

            modelBuilder.Entity("OnlineRetailManagement.Models.User", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mobilenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("email");

                    b.ToTable("users");
                });

            modelBuilder.Entity("OnlineRetailManagement.Models.Cart", b =>
                {
                    b.HasOne("OnlineRetailManagement.Models.User", "user")
                        .WithMany("cart")
                        .HasForeignKey("Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("OnlineRetailManagement.Models.Orders", b =>
                {
                    b.HasOne("OnlineRetailManagement.Models.Cart", "cart")
                        .WithMany("orders")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cart");
                });

            modelBuilder.Entity("OnlineRetailManagement.Models.ProductsInCart", b =>
                {
                    b.HasOne("OnlineRetailManagement.Models.Cart", "cart")
                        .WithMany("ProductsInCart")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineRetailManagement.Models.Product", "product")
                        .WithMany("productincart")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cart");

                    b.Navigation("product");
                });

            modelBuilder.Entity("OnlineRetailManagement.Models.Cart", b =>
                {
                    b.Navigation("ProductsInCart");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("OnlineRetailManagement.Models.Product", b =>
                {
                    b.Navigation("productincart");
                });

            modelBuilder.Entity("OnlineRetailManagement.Models.User", b =>
                {
                    b.Navigation("cart");
                });
#pragma warning restore 612, 618
        }
    }
}
